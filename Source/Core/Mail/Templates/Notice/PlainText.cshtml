@using System
@using System.Linq
@using Exceptionless
@using Exceptionless.Core.Extensions
@using Exceptionless.Core.Models.Data
@inherits RazorSharpEmail.EmailTemplate<Exceptionless.Core.Mail.Models.EventNotificationModel>
@if (Model.IsNew) {
<text>
A new @if (Model.IsCritical) { <text>critical </text> }event has occurred in the "@Model.ProjectName" project.
</text>
} else if (Model.IsRegression) {
<text>
@if (Model.IsCritical) { <text>A critical</text> } else { <text>An</text> } event has regressed in the "@Model.ProjectName" project.
</text>
} else {
<text>
@if (Model.IsCritical) { <text>A critical</text> } else { <text>An</text> } event has reoccurred for the @Model.TotalOccurrences.ToOrdinal() time in the "@Model.ProjectName" project.
</text>
}
@if (!String.IsNullOrEmpty(Model.Message)) {
<text>

Message:
@Model.Message
</text>
}
@if (!String.IsNullOrEmpty(Model.Source)) {
<text>

Source:
@Model.Source
</text>
}
@if (!String.IsNullOrEmpty(Model.Url)) {
<text>

Source:
@Model.Url
</text>
}
@if (Model.Event.Tags != null && Model.Event.Tags.Any()) {
<text>

Tags:
@String.Join(", ", Model.Event.Tags)
</text>
}
@{
	UserDescription userDescription = Model.Event.GetUserDescription();
	UserInfo userInfo = Model.Event.GetUserIdentity();
}
@if (userInfo != null) {
	if (!String.IsNullOrEmpty(userInfo.Name)) {
<text>

User's Name:
@userInfo.Name
</text>
	}
	if (!String.IsNullOrEmpty(userInfo.Identity)) {
<text>

User's Identity:
@userInfo.Identity
</text>
	}
}
@if (userDescription != null) {
	if (!String.IsNullOrEmpty(userDescription.EmailAddress)) {
<text>

User's Email:
@userDescription.EmailAddress
</text>
	}
	if (!String.IsNullOrEmpty(userDescription.Description)) {
<text>

User's Description:
@userDescription.Description
</text>
	}
}

View the event:
@Model.BaseUrl/event/@Model.Event.Id
