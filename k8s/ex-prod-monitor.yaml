apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: ex-prod-monitor
  namespace: ex-prod
spec:
  version: 8.8.0
  nodeSets:
  - name: main
    count: 1
    config:
      # if not setting max_map_count in an init container, then use this setting
      #node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms4g -Xmx4g
          resources:
            requests:
              memory: 8Gi
              cpu: 2
            limits:
              memory: 8Gi
              cpu: 2
        # related to "node.store.allow_mmap: false" setting above
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
        storageClassName: managed-csi-premium

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: ex-prod-monitor
  namespace: ex-prod
spec:
  version: 8.8.0
  count: 1
  elasticsearchRef:
    name: ex-prod-monitor
  config:
    server.publicBaseUrl: https://kibana.exceptionless.io
    xpack.fleet.packages:
    - name: apm
      version: latest

---
apiVersion: apm.k8s.elastic.co/v1
kind: ApmServer
metadata:
  name: ex-prod-monitor
  namespace: ex-prod
spec:
  version: 8.8.0
  count: 1
  elasticsearchRef:
    name: ex-prod-monitor
  kibanaRef:
    name: ex-prod-monitor
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  podTemplate:
    spec:
      containers:
      - name: apm-server
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 2Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ex-prod-monitor
  namespace: ex-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
      - kibana.exceptionless.io
      secretName: ex-prod-monitor-kibana-tls
  rules:
    - host: kibana.exceptionless.io
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: ex-prod-monitor-kb-http
                port:
                  name: https