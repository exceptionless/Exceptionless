/*
 * ---------------------------------------------------------------
 * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##
 * ##                                                           ##
 * ## AUTHOR: acacode                                           ##
 * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##
 * ---------------------------------------------------------------
 */

// This file was generated by the templates in the /api-templates folder

import { IsDate, IsEmail, IsInt, IsMongoId, IsNumber, IsOptional, IsUrl, MaxLength, MinLength, ValidateNested } from 'class-validator';

export class BillingPlan {
    @IsOptional() description?: string;
    @IsOptional() has_premium_features?: boolean;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_hidden?: boolean;
    /** @format int32 */
    @IsOptional() @IsInt() max_events_per_month?: number;
    /** @format int32 */
    @IsOptional() @IsInt() max_projects?: number;
    /** @format int32 */
    @IsOptional() @IsInt() max_users?: number;
    @IsOptional() name?: string;
    /** @format double */
    @IsOptional() @IsNumber() price?: number;
    /** @format int32 */
    @IsOptional() @IsInt() retention_days?: number;
}

/**
 *
 *
 * 0 = Trialing
 *
 * 1 = Active
 *
 * 2 = PastDue
 *
 * 3 = Canceled
 *
 * 4 = Unpaid
 * @format int32
 */
export enum BillingStatus {
    Active = 1,
    Canceled = 3,
    PastDue = 2,
    Trialing = 0,
    Unpaid = 4
}

export class ChangePasswordModel {
    @IsOptional() current_password?: null | string;
    @IsOptional() password?: null | string;
}

export class ChangePlanResult {
    @IsOptional() message?: null | string;
    @IsOptional() success?: boolean;
}

export class ClientConfiguration {
    @IsOptional() @ValidateNested() settings?: Record<string, string>;
    /** @format int32 */
    @IsOptional() @IsInt() version?: number;
}

export class CountResult {
    @IsOptional() @ValidateNested() aggregations?: Record<string, IAggregate>;
    @IsOptional() @ValidateNested() data?: Record<string, unknown>;
    /** @format int64 */
    @IsOptional() @IsInt() total?: number;
}

export interface IAggregate {
    data?: Record<string, unknown>;
}

export class Invite {
    /** @format date-time */
    @IsOptional() @IsDate() date_added?: string;
    @IsOptional() email_address?: string;
    @IsOptional() token?: string;
}

export class Invoice {
    /** @format date-time */
    @IsOptional() @IsDate() date?: string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() @ValidateNested() items?: InvoiceLineItem[];
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() organization_name?: string;
    @IsOptional() paid?: boolean;
    /** @format double */
    @IsOptional() @IsNumber() total?: number;
}

export class InvoiceGridModel {
    /** @format date-time */
    @IsOptional() @IsDate() date?: string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() paid?: boolean;
}

export class InvoiceLineItem {
    /** @format double */
    @IsOptional() @IsNumber() amount?: number;
    @IsOptional() date?: null | string;
    @IsOptional() description?: string;
}

export class Login {
    /** @format email */
    @IsEmail({ require_tld: false }) @MinLength(1) email!: string;
    @IsOptional() @MinLength(40) @MaxLength(40) invite_token?: null | string;
    @MinLength(6) @MaxLength(100) password!: string;
}

export class NewOrganization {
    @IsOptional() name?: string;
}

export class NewProject {
    @IsOptional() delete_bot_data_enabled?: boolean;
    @IsOptional() name?: string;
    @IsOptional() @IsMongoId() organization_id?: string;
}

export class NewToken {
    @IsOptional() @IsMongoId() default_project_id?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() expires_utc?: null | string;
    @IsOptional() notes?: null | string;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() scopes?: string[];
}

export class NewWebHook {
    @IsOptional() event_types?: string[];
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() @IsUrl() url?: string;
    /** The schema version that should be used. */
    @IsOptional() version?: string;
}

export class NotificationSettings {
    @IsOptional() report_critical_errors?: boolean;
    @IsOptional() report_critical_events?: boolean;
    @IsOptional() report_event_regressions?: boolean;
    @IsOptional() report_new_errors?: boolean;
    @IsOptional() report_new_events?: boolean;
    @IsOptional() send_daily_summary?: boolean;
}

export class OAuthAccount {
    @IsOptional() @ValidateNested() extra_data?: Record<string, string>;
    @IsOptional() provider?: string;
    @IsOptional() @IsMongoId() provider_user_id?: string;
    @IsOptional() username?: string;
}

export class PersistentEvent {
    /** @format int32 */
    @IsOptional() @IsInt() count?: null | number;
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() @ValidateNested() data?: Record<string, unknown>;
    /** @format date-time */
    @IsOptional() @IsDate() date?: string;
    @IsOptional() geo?: null | string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() @ValidateNested() idx?: Record<string, unknown>;
    @IsOptional() is_first_occurrence?: boolean;
    @IsOptional() message?: null | string;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() @IsMongoId() reference_id?: null | string;
    @IsOptional() source?: null | string;
    @IsOptional() @IsMongoId() stack_id?: string;
    @IsOptional() tags?: null | string[];
    @IsOptional() type?: null | string;
    /** @format double */
    @IsOptional() @IsNumber() value?: null | number;
}

export class ResetPasswordModel {
    @IsOptional() password?: null | string;
    @IsOptional() password_reset_token?: null | string;
}

export class Signup {
    /** @format email */
    @IsEmail({ require_tld: false }) @MinLength(1) email!: string;
    @IsOptional() @MinLength(40) @MaxLength(40) invite_token?: null | string;
    @MinLength(1) name!: string;
    @MinLength(6) @MaxLength(100) password!: string;
}

export class Stack {
    @IsOptional() allow_notifications?: boolean;
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    /** @format date-time */
    @IsOptional() @IsDate() date_fixed?: null | string;
    @IsOptional() description?: null | string;
    @IsOptional() duplicate_signature?: string;
    /** @format date-time */
    @IsOptional() @IsDate() first_occurrence?: string;
    @IsOptional() fixed_in_version?: null | string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_deleted?: boolean;
    /** @format date-time */
    @IsOptional() @IsDate() last_occurrence?: string;
    @IsOptional() occurrences_are_critical?: boolean;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() references?: string[];
    @IsOptional() signature_hash?: string;
    @IsOptional() @ValidateNested() signature_info?: Record<string, string>;
    /** @format date-time */
    @IsOptional() @IsDate() snooze_until_utc?: null | string;
    /**
     *
     * open
     * fixed
     * regressed
     * snoozed
     * ignored
     * discarded
     */
    @IsOptional() status?: StackStatus;
    @IsOptional() tags?: string[];
    @IsOptional() title?: string;
    /** @format int32 */
    @IsOptional() @IsInt() total_occurrences?: number;
    @IsOptional() type?: string;
    /** @format date-time */
    @IsOptional() @IsDate() updated_utc?: string;
}

/**
 *
 *
 * open
 *
 * fixed
 *
 * regressed
 *
 * snoozed
 *
 * ignored
 *
 * discarded
 */
export enum StackStatus {
    Discarded = 'discarded',
    Fixed = 'fixed',
    Ignored = 'ignored',
    Open = 'open',
    Regressed = 'regressed',
    Snoozed = 'snoozed'
}

export class StringStringValuesKeyValuePair {
    @IsOptional() key?: string;
    @IsOptional() value?: string[];
}

export class StringValueFromBody {
    @IsOptional() value?: string;
}

export class TokenResult {
    @MinLength(1) token!: string;
}

export class UpdateEmailAddressResult {
    @IsOptional() is_verified?: boolean;
}

export class UsageHourInfo {
    /** @format int32 */
    @IsOptional() @IsInt() blocked?: number;
    /** @format date-time */
    @IsOptional() @IsDate() date?: string;
    /** @format int32 */
    @IsOptional() @IsInt() discarded?: number;
    /** @format int32 */
    @IsOptional() @IsInt() too_big?: number;
    /** @format int32 */
    @IsOptional() @IsInt() total?: number;
}

export class UsageInfo {
    /** @format int32 */
    @IsOptional() @IsInt() blocked?: number;
    /** @format date-time */
    @IsOptional() @IsDate() date?: string;
    /** @format int32 */
    @IsOptional() @IsInt() discarded?: number;
    /** @format int32 */
    @IsOptional() @IsInt() limit?: number;
    /** @format int32 */
    @IsOptional() @IsInt() too_big?: number;
    /** @format int32 */
    @IsOptional() @IsInt() total?: number;
}

export class User {
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() email_address?: string;
    @IsOptional() email_notifications_enabled?: boolean;
    @IsOptional() full_name?: string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_active?: boolean;
    @IsOptional() is_email_address_verified?: boolean;
    @IsOptional() @ValidateNested() o_auth_accounts?: OAuthAccount[];
    @IsOptional() organization_ids?: string[];
    @IsOptional() password?: null | string;
    @IsOptional() password_reset_token?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() password_reset_token_expiration?: string;
    @IsOptional() roles?: string[];
    @IsOptional() salt?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() updated_utc?: string;
    @IsOptional() verify_email_address_token?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() verify_email_address_token_expiration?: string;
}

export class UserDescription {
    @IsOptional() @ValidateNested() data?: Record<string, unknown>;
    @IsOptional() description?: null | string;
    @IsOptional() email_address?: null | string;
}

export class ViewOrganization {
    @IsOptional() 'card_last4'?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() billing_change_date?: null | string;
    @IsOptional() @IsMongoId() billing_changed_by_user_id?: null | string;
    /** @format double */
    @IsOptional() @IsNumber() billing_price?: number;
    /**
     *
     * 0 = Trialing
     * 1 = Active
     * 2 = PastDue
     * 3 = Canceled
     * 4 = Unpaid
     */
    @IsOptional() billing_status?: BillingStatus;
    /** @format int32 */
    @IsOptional() @IsInt() bonus_events_per_month?: number;
    /** @format date-time */
    @IsOptional() @IsDate() bonus_expiration?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() @ValidateNested() data?: Record<string, unknown>;
    /** @format int64 */
    @IsOptional() @IsInt() event_count?: number;
    @IsOptional() has_premium_features?: boolean;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() @ValidateNested() invites?: Invite[];
    @IsOptional() is_over_monthly_limit?: boolean;
    @IsOptional() is_over_request_limit?: boolean;
    @IsOptional() is_suspended?: boolean;
    @IsOptional() is_throttled?: boolean;
    /** @format int32 */
    @IsOptional() @IsInt() max_events_per_month?: number;
    /** @format int32 */
    @IsOptional() @IsInt() max_projects?: number;
    /** @format int32 */
    @IsOptional() @IsInt() max_users?: number;
    @IsOptional() name?: string;
    @IsOptional() plan_description?: string;
    @IsOptional() @IsMongoId() plan_id?: string;
    @IsOptional() plan_name?: string;
    /** @format int64 */
    @IsOptional() @IsInt() project_count?: number;
    /** @format int32 */
    @IsOptional() @IsInt() retention_days?: number;
    /** @format int64 */
    @IsOptional() @IsInt() stack_count?: number;
    /** @format date-time */
    @IsOptional() @IsDate() subscribe_date?: null | string;
    @IsOptional() suspension_code?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() suspension_date?: null | string;
    @IsOptional() suspension_notes?: null | string;
    @IsOptional() @ValidateNested() usage?: UsageInfo[];
    @IsOptional() @ValidateNested() usage_hours?: UsageHourInfo[];
}

export class ViewProject {
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() @ValidateNested() data?: Record<string, unknown>;
    @IsOptional() delete_bot_data_enabled?: boolean;
    /** @format int64 */
    @IsOptional() @IsInt() event_count?: number;
    @IsOptional() has_premium_features?: boolean;
    @IsOptional() has_slack_integration?: boolean;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_configured?: boolean | null;
    @IsOptional() name?: string;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() organization_name?: string;
    @IsOptional() promoted_tabs?: string[];
    /** @format int64 */
    @IsOptional() @IsInt() stack_count?: number;
    @IsOptional() @ValidateNested() usage?: UsageInfo[];
    @IsOptional() @ValidateNested() usage_hours?: UsageHourInfo[];
}

export class ViewToken {
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() @IsMongoId() default_project_id?: null | string;
    /** @format date-time */
    @IsOptional() @IsDate() expires_utc?: null | string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_disabled?: boolean;
    @IsOptional() is_suspended?: boolean;
    @IsOptional() notes?: null | string;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() scopes?: string[];
    /** @format date-time */
    @IsOptional() @IsDate() updated_utc?: string;
    @IsOptional() @IsMongoId() user_id?: null | string;
}

export class ViewUser {
    @IsOptional() email_address?: string;
    @IsOptional() email_notifications_enabled?: boolean;
    @IsOptional() full_name?: string;
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_active?: boolean;
    @IsOptional() is_email_address_verified?: boolean;
    @IsOptional() is_invite?: boolean;
    @IsOptional() organization_ids?: string[];
    @IsOptional() roles?: string[];
}

export class WebHook {
    /** @format date-time */
    @IsOptional() @IsDate() created_utc?: string;
    @IsOptional() event_types?: string[];
    @IsOptional() @IsMongoId() id?: string;
    @IsOptional() is_enabled?: boolean;
    @IsOptional() @IsMongoId() organization_id?: string;
    @IsOptional() @IsMongoId() project_id?: string;
    @IsOptional() @IsUrl() url?: string;
    @IsOptional() version?: string;
}
